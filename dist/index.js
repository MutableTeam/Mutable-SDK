"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class t{constructor(t,i){this.config=t,this.logger=i}async initialize(){this.logger.info("Initializing AuthModule")}setPlayer(t){this.player=t,this.logger.info("Player set in AuthModule",t)}getPlayer(){return this.player}async authenticateAsGuest(t){try{this.logger.info("Authenticating as guest");const i={id:`guest-${Date.now()}`,name:t||`Guest_${Math.floor(1e4*Math.random())}`};return this.player=i,this.logger.info("Guest authentication successful",{playerId:i.id}),i}catch(t){throw this.logger.error("Guest authentication failed",t),t}}}class i{constructor(t,i){this.config=t,this.logger=i}async initialize(t){this.logger.info("Initializing GameStateModule",t),this.gameInfo=t}setPlayer(t){this.player=t,this.logger.info("Player set in GameStateModule",t)}}class e{constructor(t,i){this.config=t,this.logger=i}async initialize(){this.logger.info("Initializing TransactionsModule")}setPlayer(t){this.player=t,this.logger.info("Player set in TransactionsModule",t)}async getBalance(t="MUTB"){try{return this.logger.info("Getting player balance",{currency:t}),1e3}catch(t){throw this.logger.error("Failed to get player balance",t),t}}}class s{constructor(t=!1){this.prefix="[MutableSDK]",this.debug=t}setDebug(t){this.debug=t}debug(t,i){this.debug&&(i?console.debug(`${this.prefix} ${t}`,i):console.debug(`${this.prefix} ${t}`))}info(t,i){i?console.info(`${this.prefix} ${t}`,i):console.info(`${this.prefix} ${t}`)}warn(t,i){i?console.warn(`${this.prefix} ${t}`,i):console.warn(`${this.prefix} ${t}`)}error(t,i){i?console.error(`${this.prefix} ${t}`,i):console.error(`${this.prefix} ${t}`)}}exports.AuthModule=t,exports.GameStateModule=i,exports.MutableSDK=class{constructor(r){this.initialized=!1,this.config={environment:"production",debug:!1,apiUrl:this.getDefaultApiUrl(r.environment||"production"),...r},this.logger=new s(this.config.debug||!1),this.auth=new t(this.config,this.logger),this.gameState=new i(this.config,this.logger),this.transactions=new e(this.config,this.logger),this.logger.info("MutableSDK instance created")}async initialize(t){try{if(this.logger.info("Initializing MutableSDK",t),!t.id||!t.name||!t.version)throw new Error("Game information is incomplete. id, name, and version are required.");this.gameInfo=t,await this.auth.initialize(),await this.gameState.initialize(t),await this.transactions.initialize(),this.initialized=!0,this.logger.info("MutableSDK initialized successfully")}catch(t){throw this.logger.error("Failed to initialize MutableSDK",t),t}}setPlayer(t){this.playerInfo=t,this.auth.setPlayer(t),this.gameState.setPlayer(t),this.transactions.setPlayer(t),this.logger.info("Player information set",t)}getPlayer(){return this.playerInfo}getGameInfo(){return this.gameInfo}isInitialized(){return this.initialized}getConfig(){return{...this.config}}getDefaultApiUrl(t){switch(t){case"development":return"https://dev-api.mutable.io";case"staging":return"https://staging-api.mutable.io";default:return"https://api.mutable.io"}}},exports.TransactionsModule=e,exports.VERSION="1.0.0";
//# sourceMappingURL=index.js.map
